version: '3.8'

services:

  # ======================================================= SIMULATED MQTT SENSOR ==============================================================
  mqtt-sensor:
    build:
      context: ./mqtt/simulated_sensor
    container_name: mqtt-simulated-sensor
    volumes:
      - ./mqtt/simulated_sensor:/mqtt/simulated_sensor
    depends_on:
      - mosquitto
    networks:
      - my-network
      
  # =============================================== MQTT BROKER AND WEB INTERFACE (mosquitto) ==================================================
  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: mosquitto
    ports:
      - "1883:1883"  # Puerto MQTT
      - "9001:9001"  # Puerto WebSockets (opcional si planeas usar websockets)
      - "8883:8883"  # Puerto para MQTT con TLS
    volumes:
      - ./mqtt/mosquitto/config:/mosquitto/config
      - ./mqtt/mosquitto/data:/mosquitto/data
      - ./mqtt/mosquitto/log:/mosquitto/log
    networks:
      - my-network

  mqtt-explorer:
    image: smeagolworms4/mqtt-explorer:latest
    container_name: mqtt-explorer
    ports:
      - "8082:4000"  # Puerto para acceder a la interfaz gr√°fica
    networks:
      - my-network

  # ===================================================== MONGODB AND MONGODB EXPRESS ==========================================================
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 1234
    volumes:
      - ./mongo/mongodb_data:/data/db
    networks:
      - my-network

  mongodb-express:
    image: mongo-express:latest
    container_name: mongodb-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH_USERNAME: root
      ME_CONFIG_BASICAUTH_PASSWORD: 1234
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: 1234
    depends_on:
      - mongodb
    networks:
      - my-network

  # ======================================================== BACKEND AND FRONTEND ============================================================
  backend:
    build:
      dockerfile: ./backend/Dockerfile
    container_name: backend
    volumes:
      - ./backend:/usr/src/app
    ports:
      - "3000:3000"
    environment:
      MONGO_URI: mongodb://root:1234@mongodb:27017
    depends_on:
      - mongodb
    networks:
      - my-network

  frontend:
    build:
      dockerfile: ./frontend/Dockerfile
    container_name: frontend
    volumes:
      - ./frontend:/usr/src/app
    ports:
      - "8080:8080"
    depends_on:
      - backend
    networks:
      - my-network

networks:
  my-network:
    external: true